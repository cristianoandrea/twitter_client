{"version":3,"sources":["logo.svg","components/Tweet.js","App.js","reportWebVitals.js","index.js"],"names":["Tweet","props","tweet","content","Box","component","sx","p","Typography","variant","gutterBottom","this","user","screen_name","full_text","Component","InputForm","father","marginTop","Grid","container","spacing","item","xs","md","display","justifyContent","alignItems","FormControl","FormLabel","RadioGroup","defaultValue","name","FormControlLabel","value","control","Radio","label","TextField","Slider","step","valueLabelDisplay","Button","type","App","state","tweetsLoaded","tweets","index","window","location","href","indexOf","queryString","substr","fetch","method","headers","then","response","json","data","console","log","setState","catch","e","className","List","map","ListItem","button","Divider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,I,0ICwBAA,E,kDAnBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQD,EAAME,QAFF,E,0CAKnB,WACE,OACE,eAACC,EAAA,EAAD,CAAKC,UAAU,OAAOC,GAAI,CAAEC,EAAG,GAA/B,UACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACL,UAAU,MAAhD,cACIM,KAAKT,MAAMU,KAAKC,eAEpB,cAACL,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,EAAxC,SACGC,KAAKT,MAAMY,mB,GAbFC,aCiBdC,E,kDACJ,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,OAAShB,EAAMgB,OAFH,E,0CAKnB,WACE,OACE,cAACb,EAAA,EAAD,CAAME,GAAI,CAAEC,EAAG,EAAGW,UAAW,KAA7B,SACE,+BACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,EACJlB,GAAI,CACFmB,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAPhB,SAUE,eAACC,EAAA,EAAD,CAAavB,UAAU,WAAvB,UACE,cAACwB,EAAA,EAAD,CAAWxB,UAAU,SAArB,+BACA,eAACyB,EAAA,EAAD,CACE,aAAW,oBACXC,aAAa,SACbC,KAAK,OAHP,UAKE,cAACC,EAAA,EAAD,CAAkBC,MAAM,UAAUC,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,cAC5D,cAACJ,EAAA,EAAD,CAAkBC,MAAM,OAAOC,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,mBAK/D,cAAClB,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,EACJlB,GAAI,CACFmB,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAPhB,SAUE,cAACW,EAAA,EAAD,CAAWN,KAAK,KAAKK,MAAM,WAAW5B,QAAQ,eAGhD,eAACU,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,EACJlB,GAAI,CACFmB,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAPhB,UAWE,cAACnB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,EAAxC,SACE,oDAEF,cAAC6B,EAAA,EAAD,CACE,aAAW,iBACXR,aAAc,GACdS,KAAM,EACNH,MAAM,SACNI,kBAAkB,KAClBT,KAAK,cAKT,cAACb,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,EACJlB,GAAI,CACFmB,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAPhB,SAUE,cAACe,EAAA,EAAD,CAAQjC,QAAQ,OAAOkC,KAAK,SAA5B,gC,GAlFU5B,aA6KT6B,E,kDAhFb,WAAY3C,GAAQ,IAAD,8BACjB,cAAMA,IACD4C,MAAQ,CACXC,cAAc,GAEhB,EAAKC,OAAS,CACZ,CACEjC,UAAW,aACXF,KAAM,CACJC,YAAa,cAGjB,CACEC,UAAW,mBACXF,KAAM,CACJC,YAAa,kBAInB,EAAKkC,OAAS,GAnBG,E,qDAsBnB,WAAqB,IAAD,OACdC,EAAQC,OAAOC,SAASC,KAAKC,QAAQ,KACzC,IAAc,GAAVJ,EAAa,CACf,IAAIK,EAAcJ,OAAOC,SAASC,KAAKG,OAAON,GAC9CO,MAAM,UAAD,OAAWF,GAAe,CAC7BG,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZ,EAAKd,OAASc,EACd,EAAKG,SAAS,CAAClB,cAAc,OAE9BmB,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,S,oBAKpB,WACE,OACE,sBAAKC,UAAU,MAAf,UAeE,cAAC,EAAD,CAAWlD,OAAQN,OACnB,cAACyD,EAAA,EAAD,CAAM/D,UAAU,MAAM,aAAW,kBAAjC,SACGM,KAAKoC,OAAOsB,KAAI,SAACnE,EAAO8C,GACvB,OACE,gCACE,cAACsB,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAAC,EAAD,CAAOpE,QAASD,MAElB,cAACsE,EAAA,EAAD,mB,GAtEEzD,aCrGH0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9860048a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nclass Tweet extends Component {\n  constructor(props) {\n    super(props);\n    this.tweet = props.content;\n  }\n\n  render() {\n    return (\n      <Box component=\"span\" sx={{ p: 2}}>\n        <Typography variant=\"h5\" gutterBottom component=\"div\">\n          @{this.tweet.user.screen_name}\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          {this.tweet.full_text}\n        </Typography>\n      </Box>\n    );\n  }\n}\n\nexport default Tweet;\n","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport Grid from '@mui/material/Grid';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport Typography from '@mui/material/Typography';\n\nimport Tweet from './components/Tweet'\n\n\nclass InputForm extends Component {\n  constructor(props) {\n    super(props);\n    this.father = props.father;\n  }\n\n  render() {\n    return (\n      <Box  sx={{ p: 2, marginTop: '3'}}>\n        <form >\n          <Grid container spacing={2} >\n            <Grid\n              item\n              xs={12}\n              md={3}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Metodo di ricerca</FormLabel>\n                <RadioGroup\n                  aria-label=\"metodo di ricerca\"\n                  defaultValue=\"female\"\n                  name=\"mode\"\n                >\n                  <FormControlLabel value=\"content\" control={<Radio />} label=\"Contenuto\" />\n                  <FormControlLabel value=\"user\" control={<Radio />} label=\"Utente\" />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={3}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              <TextField name=\"by\" label=\"Standard\" variant=\"standard\" />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={3}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n\n              <Typography variant=\"body1\" gutterBottom>\n                <pre>Quantit√†    </pre>\n              </Typography>\n              <Slider\n                aria-label=\"Always visible\"\n                defaultValue={10}\n                step={1}\n                label=\"Quanti\"\n                valueLabelDisplay=\"on\"\n                name=\"amount\"\n              />\n\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={3}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              <Button variant=\"text\" type=\"submit\">Cerca</Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n    );\n  }\n}\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweetsLoaded: false\n    }\n    this.tweets = [\n      {\n        full_text: \"ciao bello\",\n        user: {\n          screen_name: \"Fragolone\"\n        }\n      },\n      {\n        full_text: \"bella pirataaaaa\",\n        user: {\n          screen_name: \"LelloMcTello\"\n        }\n      }\n    ];\n    this.tweets = [ ];\n  }\n\n  componentDidMount() {\n    var index = window.location.href.indexOf('?');\n    if (index != -1) {\n      var queryString = window.location.href.substr(index);\n      fetch(`/tweets${queryString}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          this.tweets = data;\n          this.setState({tweetsLoaded: true});\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/*}<header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>*/}\n        <InputForm father={this}/ >\n        <List component=\"nav\" aria-label=\"mailbox folders\">\n          {this.tweets.map((tweet, index) => {\n            return (\n              <div>\n                <ListItem button>\n                  <Tweet content={tweet}></Tweet>\n                </ListItem>\n                <Divider />\n              </div>\n            );\n          })}\n        </List>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}